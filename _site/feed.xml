<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-01-22T10:04:43-03:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">AsyncTask e Android</title><link href="http://localhost:4000/2020/10/06/AsyncTask-em-Android.html" rel="alternate" type="text/html" title="AsyncTask e Android" /><published>2020-10-06T00:00:00-03:00</published><updated>2020-10-06T00:00:00-03:00</updated><id>http://localhost:4000/2020/10/06/AsyncTask%20em%20Android</id><content type="html" xml:base="http://localhost:4000/2020/10/06/AsyncTask-em-Android.html">&lt;p&gt;O curso abordou sobre AsyncTask que pelo que entendi do curso, o &lt;strong&gt;AsyncTask&lt;/strong&gt; executa&lt;!--more--&gt; procedimentos assincronos, ou seja, que rodam em background. Para processamentos assincronos não podemos executar na thread da UI (User Interface), então criamos esse AsyncTask que cria uma Thread que espera o resultado do acesso. Para testar meus entendimentos Criei um aplicativo que usa a api &lt;a href=&quot;https://genderize.io&quot;&gt;Genderize.IO&lt;/a&gt; (ela responde se um ou mais nomes são do sexo masculino ou feminino). Neste post não colocarei muito código, para ver o código acesse o projeto no github &lt;a href=&quot;https://github.com/rodrigoregio/NameAPIs&quot;&gt;Projeto&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Para acessar API’s primeiramente devemos adicionar permissão para HttpUrlConnection no AndroidManifest.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;android.permission.INTENET&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
O aplicativo pega nomes digitados (separados por virgula) em um TextView e também há um botão (ao digitar os nomes o usuario clica no botão). Ao clicar no botão é chamado a função verificaNomes, ela pega os nomes digitados pelo usuário e quebra (split) separando por virgula, exemplo, “Rodrigo,José” se tornará um array de Strings que nomeei nomesList e terá os valores [“Rodrigo”, “José”]. Se a nomesList tiver um nome somente ele acessará a url &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;https://api.genderize.io?name=&quot;+nomesList[0]&lt;/code&gt;, e se tiver mais de um nome acessará com um for que ficará da seguinte forma:&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;stringBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;api.genderize.io/?&amp;amp;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nomesList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;stringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;name=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
O aplicativo funcionará somente online, então fiz uma função para saber se o usuario está online. Se o usuario estiver online chamará uma função chamada buscaDados.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Antes da função buscaDados explicarei sobre a AsyncTask (até porque a buscaDados chamará a AsyncTask. Em nossa classe MainActivity mesmo criamos a classe MyTask que extende a AsyncTask, para extender devemos extender da seguinte forma extends &lt;strong&gt;AsyncTask&amp;lt;String,String,String&amp;gt;&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Não tinha entendido o porque da tag &lt;strong&gt;&amp;lt;String,String,String&amp;gt;&lt;/strong&gt;, mas pesquisando mais sobre ela, encontrei que ela recebe tipo três “parâmetros”. O primeiro String é um parâmetro (que usamos para passar a url onde ela pega os dados. O segundo String é o progresso (pode-se substituir o String por um int e exibirá a porcentagem do procedimento como quando fazemos um download. E o terceiro String é o resultado, o que ele pegou.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Fazendo isto nós teremos que sobrescrever ao menos um método, o &lt;strong&gt;doInBackground()&lt;/strong&gt;. Nele criamos uma String que receberá o conteúdo da api. Criamos uma classe chamada &lt;strong&gt;HttpManager&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Essa HttpManager é o que realiza a conexão, criamos um metodo chamado &lt;strong&gt;getDados(String uri)&lt;/strong&gt; que tem como parametro a url, e ela trabalha como uma conexão com banco de dados. Criamos uma URL com a uri que passamos como argumento. Criamos uma conexão com HttpUrlConnection abrimos a url fazendo um casting para o HttpUrlConnection. Como disse anteriormente ela trabalha como um banco de dados, para mais detalhes acesse o projeto no Github &lt;a href=&quot;https://github.com/rodrigoregio/NameAPIs/blob/master/app/src/main/java/top/rregio/nameapis/HttpManager.java&quot;&gt;classe HttpManager&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Após retornar ao doInBackground retornamos a string conseguida na api. Na classe do AsyncTask também sobrescrevi outros dois métodos o &lt;strong&gt;onPreExecute&lt;/strong&gt; (nele coloquei para que mostre somente um progressbar (item com a animação de que está carregando) e outro chamado &lt;strong&gt;onPostExecute&lt;/strong&gt; (fiz com que ele desabilite a animação do progressbar e chame um metodo chamado atualizarView(String s) este método somente coloca a string retornada no doInBackground em um TextView.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;E por enquanto é somente estes passos que meu aplicativo faz, e é isto que entendi o sobre acesso a API’s com Android.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
/*
var disqus_config = function () {
this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');
s.src = 'https://rregio-top.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><author><name></name></author><category term="Android" /><summary type="html">O curso abordou sobre AsyncTask que pelo que entendi do curso, o AsyncTask executa</summary></entry><entry><title type="html">Iniciando com Jekyll</title><link href="http://localhost:4000/2020/09/25/IniciandocomJekyll.html" rel="alternate" type="text/html" title="Iniciando com Jekyll" /><published>2020-09-25T00:00:00-03:00</published><updated>2020-09-25T00:00:00-03:00</updated><id>http://localhost:4000/2020/09/25/IniciandocomJekyll</id><content type="html" xml:base="http://localhost:4000/2020/09/25/IniciandocomJekyll.html">&lt;p&gt;Olá Mundo, Google e pessoal. Este é para ser o primeiro post de meu blog que estou criando&lt;!--more--&gt;, onde nele explicarei o porque, pra que e como estou criando isto. Primeiramente o porque?&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Estou criando este blog porque recentemente estou ouvindo muitos canais de programadores dizendo que é importante saber como escrever algo onde você documenta toda a sua experiência sobre uma determinada tecnologia pois isto te ajuda a organizar o processamento do que se está falando. E com certa razão quem consegue explicar algo em um texto consegue explicar isto também em audio, video ou qualquer outra forma.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Então estou fazendo este blog para poder organizar melhor o meu entendimento sobre um determinado assunto que estou estudando naquele dia. Mesmo que este conhecimento seja vago, e ou que ninguém nunca leia estes posts quero criar isto para tentar organizar minhas ideias, entendimentos tentando explicar.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;E por fim como farei este blog. Bom, para iniciar tentarei fazer ele com um criador de sites estáticos chamado Jekyll, e procurarei estudar sobre o mesmo nesses dias iniciais, o que sei sobre ele é que ele utiliza Ruby e que com ele podemos criar páginas e hospedar onde quisermos pois ele não utiliza nenhuma linguagem de programação avançada (como php, jsp, python, etc) e também não dá pra fazer conexões com banco de dados. Também sei que ele utiliza também linguagem markdown, a que o github utiliza no arquivo Readme dos repositórios, a linguagem de markdown é como um html simplificado, pelo menos dizia no tutorial do Guanabara do Curso em Vídeo, onde ele ensina Git e GitHub com GitHub Desktop no link abaixo.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/LntSB-gl-ZI&quot;&gt;https://youtu.be/LntSB-gl-ZI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Estou usando o Notion para escrever este post, tentei exportar ele para arquivo md, porém como os arquivos contém partes que são processadas pelo jekyll ele ficou inconsistente e dificil de manter, então como primeiro post vou colocar o link dele abaixo e o resto será aqui neste blog mesmo. (ainda procurarei configura-lo, mas enquanto isso…).&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.notion.so/Iniciando-com-Jekyll-48f0e5aefc2e4d309b208f64c3529bdd&quot;&gt;Post notion&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
/*
var disqus_config = function () {
this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');
s.src = 'https://rregio-top.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><author><name></name></author><category term="web" /><category term="jekyll" /><summary type="html">Olá Mundo, Google e pessoal. Este é para ser o primeiro post de meu blog que estou criando</summary></entry></feed>